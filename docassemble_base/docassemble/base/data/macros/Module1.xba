<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<!--
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
-->
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="Module1" script:language="StarBasic">REM  *****  BASIC  *****

sub PysIndexer(sDocUrl as string)

dim oDocument as object
dim dispatcher as object

if FileExists(sDocUrl) then

    oDocument = starDesktop.loadComponentFromUrl(convertToUrl(sDocUrl), "_blank", 0, Array())
    dispatcher = createUnoService("com.sun.star.frame.DispatchHelper")
    dispatcher.executeDispatch(oDocument.CurrentController.Frame, ".uno:UpdateAllIndexes", "", 0, Array())

    oDocument.store()

end if

ThisComponent.close(True)

end sub


sub ConvertToPdf(sDocUrl as string, sPdfURL as string, updateIndex as boolean, method as string)

dim oDocument as object
dim dispatcher as object

dim pdfVersion as integer
dim useTaggedPdf as boolean

if method = "pdfa" OR method = "tagged" then
    if method = "pdfa" then
        pdfVersion = 1
    else
        pdfVersion = 0
    end if
    useTaggedPdf = true
else
    pdfVersion = 0
    useTaggedPdf = false
end if

if FileExists(sDocUrl) then

    oDocument = starDesktop.loadComponentFromUrl(convertToUrl(sDocUrl), "_blank", 0, Array())
    dispatcher = createUnoService("com.sun.star.frame.DispatchHelper")

    if updateIndex then
        dispatcher.executeDispatch(oDocument.CurrentController.Frame, ".uno:UpdateAllIndexes", "", 0, Array())
    end if

    dim pdfFilterData(52) as new com.sun.star.beans.PropertyValue
    dim propExp(1) as new com.sun.star.beans.PropertyValue

    pdfFilterData(0).Name = "UseLosslessCompression"
    pdfFilterData(0).Value = false
    pdfFilterData(1).Name = "Quality"
    pdfFilterData(1).Value = 90
    pdfFilterData(2).Name = "ReduceImageResolution"
    pdfFilterData(2).Value = false
    pdfFilterData(3).Name = "MaxImageResolution"
    pdfFilterData(3).Value = 1200
    pdfFilterData(4).Name = "UseTaggedPDF"
    pdfFilterData(4).Value = useTaggedPdf
    pdfFilterData(5).Name = "SelectPdfVersion"
    pdfFilterData(5).Value = pdfVersion
    pdfFilterData(6).Name = "PDFUACompliance"
    pdfFilterData(6).Value = 0
    pdfFilterData(7).Name = "ExportNotes"
    pdfFilterData(7).Value = false
    pdfFilterData(8).Name = "ViewPDFAfterExport"
    pdfFilterData(8).Value = false
    pdfFilterData(9).Name = "ExportBookmarks"
    pdfFilterData(9).Value = false
    pdfFilterData(10).Name = "OpenBookmarkLevels"
    pdfFilterData(10).Value = -1
    pdfFilterData(11).Name = "UseTransitionEffects"
    pdfFilterData(11).Value = true
    pdfFilterData(12).Name = "IsSkipEmptyPages"
    pdfFilterData(12).Value = true
    pdfFilterData(13).Name = "ExportPlaceholders"
    pdfFilterData(13).Value = false
    pdfFilterData(14).Name = "IsAddStream"
    pdfFilterData(14).Value = false
    pdfFilterData(15).Name = "ExportFormFields"
    pdfFilterData(15).Value = true
    pdfFilterData(16).Name = "FormsType"
    pdfFilterData(16).Value = 0
    pdfFilterData(17).Name = "AllowDuplicateFieldNames"
    pdfFilterData(17).Value = false
    pdfFilterData(18).Name = "HideViewerToolbar"
    pdfFilterData(18).Value = false
    pdfFilterData(19).Name = "HideViewerMenubar"
    pdfFilterData(19).Value = false
    pdfFilterData(20).Name = "HideViewerWindowControls"
    pdfFilterData(20).Value = false
    pdfFilterData(21).Name = "ResizeWindowToInitialPage"
    pdfFilterData(21).Value = false
    pdfFilterData(22).Name = "CenterWindow"
    pdfFilterData(22).Value = false
    pdfFilterData(23).Name = "OpenInFullScreenMode"
    pdfFilterData(23).Value = false
    pdfFilterData(24).Name = "DisplayPDFDocumentTitle"
    pdfFilterData(24).Value = true
    pdfFilterData(25).Name = "InitialView"
    pdfFilterData(25).Value = 0
    pdfFilterData(26).Name = "Magnification"
    pdfFilterData(26).Value = 0
    pdfFilterData(27).Name = "Zoom"
    pdfFilterData(27).Value = 100
    pdfFilterData(28).Name = "PageLayout"
    pdfFilterData(28).Value = 0
    pdfFilterData(29).Name = "FirstPageOnLeft"
    pdfFilterData(29).Value = false
    pdfFilterData(30).Name = "InitialPage"
    pdfFilterData(30).Value = 1
    pdfFilterData(31).Name = "Printing"
    pdfFilterData(31).Value = 2
    pdfFilterData(32).Name = "Changes"
    pdfFilterData(32).Value = 4
    pdfFilterData(33).Name = "EnableCopyingOfContent"
    pdfFilterData(33).Value = true
    pdfFilterData(34).Name = "EnableTextAccessForAccessibilityTools"
    pdfFilterData(34).Value = true
    pdfFilterData(35).Name = "ExportLinksRelativeFsys"
    pdfFilterData(35).Value = false
    pdfFilterData(36).Name = "PDFViewSelection"
    pdfFilterData(36).Value = 2
    pdfFilterData(37).Name = "ConvertOOoTargetToPDFTarget"
    pdfFilterData(37).Value = false
    pdfFilterData(38).Name = "ExportBookmarksToPDFDestination"
    pdfFilterData(38).Value = false
    pdfFilterData(39).Name = "SignPDF"
    pdfFilterData(39).Value = false
    pdfFilterData(40).Name = "_OkButtonString"
    pdfFilterData(40).Value = ""
    pdfFilterData(41).Name = "Watermark"
    pdfFilterData(41).Value = ""
    pdfFilterData(42).Name = "EncryptFile"
    pdfFilterData(42).Value = false
    pdfFilterData(43).Name = "PreparedPasswords"
    pdfFilterData(43).Value = ""
    pdfFilterData(44).Name = "RestrictPermissions"
    pdfFilterData(44).Value = false
    pdfFilterData(45).Name = "PreparedPermissionPassword"
    pdfFilterData(45).Value = Array()
    pdfFilterData(46).Name = "SignatureLocation"
    pdfFilterData(46).Value = ""
    pdfFilterData(47).Name = "SignatureReason"
    pdfFilterData(47).Value = ""
    pdfFilterData(48).Name = "SignatureContactInfo"
    pdfFilterData(48).Value = ""
    pdfFilterData(49).Name = "SignaturePassword"
    pdfFilterData(49).Value = ""
    pdfFilterData(50).Name = "SignatureCertificate"
    pdfFilterData(50).Value = ""
    pdfFilterData(51).Name = "SignatureTSA"
    pdfFilterData(51).Value = ""
    pdfFilterData(52).Name = "UseReferenceXObject"
    pdfFilterData(52).Value = false
    propExp(0).Name = "FilterName"
    propExp(0).Value = "writer_pdf_Export"
    propExp(1).Name = "FilterData"
    propExp(1).Value = pdfFilterData()

    GlobalScope.BasicLibraries.LoadLibrary("Tools")

    oDocument.storeToURL(convertToUrl(sPdfURL), propExp())

end if

ThisComponent.close(True)

end sub
</script:module>
