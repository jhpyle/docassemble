need: "functions.html#need"
force_ask: "functions.html#force_ask"
force_gather: "functions.html#force_gather"
space_to_underscore: "functions.html#space_to_underscore"
qr_code: "functions.html#qr_code"
url_of: "functions.html#url_of"
url_action: "functions.html#url_action"
process_action: "functions.html#process_action"
action_menu_item: "functions.html#action_menu_item"
prevent_going_back: "functions.html#prevent_going_back"
set_info: "functions.html#set_info"
get_info: "functions.html#get_info"
get_language: "functions.html#get_language"
set_language: "functions.html#set_language"
get_locale: "functions.html#get_locale"
set_locale: "functions.html#set_locale"
referring_url: "functions.html#referring_url"
update_locale: "functions.html#update_locale"
get_dialect: "functions.html#get_dialect"
set_country: "functions.html#set_country"
get_country: "functions.html#get_country"
verbatim: "functions.html#verbatim"
add_separators: "functions.html#add_separators"
single_to_double_newlines: "functions.html#single_to_double_newlines"
word: "functions.html#word"
capitalize: "functions.html#capitalize"
comma_and_list: "functions.html#comma_and_list"
comma_list: "functions.html#comma_list"
currency: "functions.html#currency"
currency_symbol: "functions.html#currency_symbol"
indefinite_article: "functions.html#indefinite_article"
name_suffix: "functions.html#name_suffix"
nice_number: "functions.html#nice_number"
noun_plural: "functions.html#noun_plural"
noun_singular: "functions.html#noun_singular"
ordinal_number: "functions.html#ordinal_number"
ordinal: "functions.html#ordinal"
alpha: "functions.html#alpha"
roman: "functions.html#roman"
item_label: "functions.html#item_label"
period_list: "functions.html#period_list"
title_case: "functions.html#title_case"
verb_past: "functions.html#verb_past"
verb_present: "functions.html#verb_present"
_internal: "special.html#_internal"
url_args: "special.html#url_args"
role_needed: "special.html#role_needed"
role: "special.html#role"
speak_text: "special.html#speak_text"
track_location: "special.html#track_location"
multi_user: "special.html#multi_user"
menu_items: "special.html#menu_items"
DAObject: "objects.html#DAObject"
DAObject.copy_shallow: "objects.html#DAObject.copy_shallow"
DAObject.copy_deep: "objects.html#DAObject.copy_deep"
DAObject.attr_name: "objects.html#DAObject.attr_name"
DAObject.delattr: "objects.html#DAObject.delattr"
DAObject.getattr_fresh: "objects.html#DAObject.getattr_fresh"
DAObject.invalidate_attr: "objects.html#DAObject.invalidate_attr"
DAObject.as_serializable: "objects.html#DAObject.as_serializable"
DAObject.object_possessive: "objects.html#DAObject.object_possessive"
DAObject.object_name: "objects.html#DAObject.object_name"
DAObject.attribute_defined: "objects.html#DAObject.attribute_defined"
DAObject.attr: "objects.html#DAObject.attr"
DAObject.pronoun_possessive: "objects.html#DAObject.pronoun_possessive"
DAObject.pronoun: "objects.html#DAObject.pronoun"
DAObject.pronoun_objective: "objects.html#DAObject.pronoun_objective"
DAObject.pronoun_subjective: "objects.html#DAObject.pronoun_subjective"
DAObject.initializeAttribute: "objects.html#DAObject.initializeAttribute"
DAObject.reInitializeAttribute: "objects.html#DAObject.reInitializeAttribute"
DAObject.init: "objects.html#DAObject.init"
DAObject.using: "objects.html#DAObject.using"
DAContext: "objects.html#DAContext"
DADict: "objects.html#DADict"
DADict.set_object_type: "objects.html#DADict.set_object_type"
DADict.add_action: "objects.html#DADict.add_action"
DADict.item_actions: "objects.html#DADict.item_actions"
DADict.as_noun: "objects.html#DADict.as_noun"
DADict.as_singular_noun: "objects.html#DADict.as_singular_noun"
DADict.clear: "objects.html#DADict.clear"
DADict.comma_and_list: "objects.html#DADict.comma_and_list"
DADict.copy: "objects.html#DADict.copy"
DADict.did_verb: "objects.html#DADict.did_verb"
DADict.difference: "objects.html#DADict.difference"
DADict.does_verb: "objects.html#DADict.does_verb"
DADict.gather: "objects.html#DADict.gather"
DADict.gathered_and_complete: "objects.html#DADict.gathered_and_complete"
DADict.item_name: "objects.html#DADict.item_name"
DADict.delitem: "objects.html#DADict.delitem"
DADict.invalidate_item: "objects.html#DADict.invalidate_item"
DADict.getitem_fresh: "objects.html#DADict.getitem_fresh"
DADict.get: "objects.html#DADict.get"
DADict.slice: "objects.html#DADict.slice"
DADict.has_key: "objects.html#DADict.has_key"
DADict.initializeObject: "objects.html#DADict.initializeObject"
DADict.intersection: "objects.html#DADict.intersection"
DADict.isdisjoint: "objects.html#DADict.isdisjoint"
DADict.issubset: "objects.html#DADict.issubset"
DADict.issuperset: "objects.html#DADict.issuperset"
DADict.item: "objects.html#DADict.item"
DADict.items: "objects.html#DADict.items"
DADict.iteritems: "objects.html#DADict.iteritems"
DADict.iterkeys: "objects.html#DADict.iterkeys"
DADict.itervalues: "objects.html#DADict.itervalues"
DADict.keys: "objects.html#DADict.keys"
DADict.new: "objects.html#DADict.new"
DADict.number: "objects.html#DADict.number"
DADict.number_as_word: "objects.html#DADict.number_as_word"
DADict.pop: "objects.html#DADict.pop"
DADict.popitem: "objects.html#DADict.popitem"
DADict.pronoun: "objects.html#DADict.pronoun"
DADict.pronoun_objective: "objects.html#DADict.pronoun_objective"
DADict.pronoun_possessive: "objects.html#DADict.pronoun_possessive"
DADict.pronoun_subjective: "objects.html#DADict.pronoun_subjective"
DADict.reset_gathered: "objects.html#DADict.reset_gathered"
DADict.setdefault: "objects.html#DADict.setdefault"
DADict.union: "objects.html#DADict.union"
DADict.update: "objects.html#DADict.update"
DADict.values: "objects.html#DADict.values"
DADict.true_values: "objects.html#DADict.true_values"
DADict.false_values: "objects.html#DADict.false_values"
DADict.all_true: "objects.html#DADict.all_true"
DADict.all_false: "objects.html#DADict.all_false"
DADict.any_false: "objects.html#DADict.any_false"
DADict.any_true: "objects.html#DADict.any_true"
DADict.has_been_gathered: "objects.html#DADict.has_been_gathered"
DADict.complete_elements: "objects.html#DADict.complete_elements"
DADict.hook_on_gather: "objects.html#DADict.hook_on_gather"
DADict.hook_after_gather: "objects.html#DADict.hook_after_gather"
DAOrderedDict: "objects.html#DAOrderedDict"
DASet: "objects.html#DASet"
DASet.copy: "objects.html#DASet.copy"
DASet.clear: "objects.html#DASet.clear"
DASet.remove: "objects.html#DASet.remove"
DASet.discard: "objects.html#DASet.discard"
DASet.pop: "objects.html#DASet.pop"
DASet.add: "objects.html#DASet.add"
DASet.does_verb: "objects.html#DASet.does_verb"
DASet.did_verb: "objects.html#DASet.did_verb"
DASet.as_singular_noun: "objects.html#DASet.as_singular_noun"
DASet.as_noun: "objects.html#DASet.as_noun"
DASet.number: "objects.html#DASet.number"
DASet.number_as_word: "objects.html#DASet.number_as_word"
DASet.gather: "objects.html#DASet.gather"
DASet.comma_and_list: "objects.html#DASet.comma_and_list"
DASet.union: "objects.html#DASet.union"
DASet.intersection: "objects.html#DASet.intersection"
DASet.difference: "objects.html#DASet.difference"
DASet.isdisjoint: "objects.html#DASet.isdisjoint"
DASet.issubset: "objects.html#DASet.issubset"
DASet.issuperset: "objects.html#DASet.issuperset"
DASet.pronoun_possessive: "objects.html#DASet.pronoun_possessive"
DASet.pronoun: "objects.html#DASet.pronoun"
DASet.pronoun_objective: "objects.html#DASet.pronoun_objective"
DASet.pronoun_subjective: "objects.html#DASet.pronoun_subjective"
DASet.reset_gathered: "objects.html#DASet.reset_gathered"
DASet.has_been_gathered: "objects.html#DASet.has_been_gathered"
DASet.gathered_and_complete: "objects.html#DASet.gathered_and_complete"
DASet.filter: "objects.html#DASet.filter"
DASet.complete_elements: "objects.html#DASet.complete_elements"
DASet.hook_on_gather: "objects.html#DASet.hook_on_gather"
DASet.hook_after_gather: "objects.html#DASet.hook_after_gather"
DAFile: "objects.html#DAFile"
DAFile.is_encrypted: "objects.html#DAFile.is_encrypted"
DAFile.uses_acroform: "objects.html#DAFile.uses_acroform"
DAFile.get_pdf_fields: "objects.html#DAFile.get_pdf_fields"
DAFile.get_docx_variables: "objects.html#DAFile.get_docx_variables"
DAFile.size_in_bytes: "objects.html#DAFile.size_in_bytes"
DAFile.num_pages: "objects.html#DAFile.num_pages"
DAFile.url_for: "objects.html#DAFile.url_for"
DAFile.show: "objects.html#DAFile.show"
DAFile.initialize: "objects.html#DAFile.initialize"
DAFile.commit: "objects.html#DAFile.commit"
DAFile.retrieve: "objects.html#DAFile.retrieve"
DAFile.path: "objects.html#DAFile.path"
DAFile.slurp: "objects.html#DAFile.slurp"
DAFile.readlines: "objects.html#DAFile.readlines"
DAFile.write: "objects.html#DAFile.write"
DAFile.from_url: "objects.html#DAFile.from_url"
DAFile.copy_into: "objects.html#DAFile.copy_into"
DAFile.set_mimetype: "objects.html#DAFile.set_mimetype"
DAFile.set_attributes: "objects.html#DAFile.set_attributes"
DAFile.user_access: "objects.html#DAFile.user_access"
DAFile.privilege_access: "objects.html#DAFile.privilege_access"
DAFile.pngs_ready: "objects.html#DAFile.pngs_ready"
DAFile.fix_up: "objects.html#DAFile.fix_up"
DAFile.set_alt_text: "objects.html#DAFile.set_alt_text"
DAFile.get_alt_text: "objects.html#DAFile.get_alt_text"
DAFile.bates_number: "objects.html#DAFile.bates_number"
DAFile.make_ocr_pdf: "objects.html#DAFile.make_ocr_pdf"
DAFile.make_ocr_pdf_in_background: "objects.html#DAFile.make_ocr_pdf_in_background"
DAFileCollection: "objects.html#DAFileCollection"
DAFileCollection.uses_acroform: "objects.html#DAFileCollection.uses_acroform"
DAFileCollection.is_encrypted: "objects.html#DAFileCollection.is_encrypted"
DAFileCollection.get_pdf_fields: "objects.html#DAFileCollection.get_pdf_fields"
DAFileCollection.get_docx_variables: "objects.html#DAFileCollection.get_docx_variables"
DAFileCollection.num_pages: "objects.html#DAFileCollection.num_pages"
DAFileCollection.show: "objects.html#DAFileCollection.show"
DAFileCollection.url_for: "objects.html#DAFileCollection.url_for"
DAFileCollection.path: "objects.html#DAFileCollection.path"
DAFileCollection.fix_up: "objects.html#DAFileCollection.fix_up"
DAFileCollection.set_alt_text: "objects.html#DAFileCollection.set_alt_text"
DAFileCollection.get_alt_text: "objects.html#DAFileCollection.get_alt_text"
DAFileCollection.set_attributes: "objects.html#DAFileCollection.set_attributes"
DAFileCollection.user_access: "objects.html#DAFileCollection.user_access"
DAFileCollection.privilege_access: "objects.html#DAFileCollection.privilege_access"
DAFileList: "objects.html#DAFileList"
DAFileList.uses_acroform: "objects.html#DAFileList.uses_acroform"
DAFileList.is_encrypted: "objects.html#DAFileList.is_encrypted"
DAFileList.get_pdf_fields: "objects.html#DAFileList.get_pdf_fields"
DAFileList.get_docx_variables: "objects.html#DAFileList.get_docx_variables"
DAFileList.size_in_bytes: "objects.html#DAFileList.size_in_bytes"
DAFileList.num_pages: "objects.html#DAFileList.num_pages"
DAFileList.show: "objects.html#DAFileList.show"
DAFileList.url_for: "objects.html#DAFileList.url_for"
DAFileList.path: "objects.html#DAFileList.path"
DAFileList.set_attributes: "objects.html#DAFileList.set_attributes"
DAFileList.user_access: "objects.html#DAFileList.user_access"
DAFileList.privilege_access: "objects.html#DAFileList.privilege_access"
DAFileList.fix_up: "objects.html#DAFileList.fix_up"
DAFileList.set_alt_text: "objects.html#DAFileList.set_alt_text"
DAFileList.get_alt_text: "objects.html#DAFileList.get_alt_text"
DAStaticFile: "objects.html#DAStaticFile"
DAStaticFile.uses_acroform: "objects.html#DAStaticFile.uses_acroform"
DAStaticFile.is_encrypted: "objects.html#DAStaticFile.is_encrypted"
DAStaticFile.get_pdf_fields: "objects.html#DAStaticFile.get_pdf_fields"
DAStaticFile.get_docx_variables: "objects.html#DAStaticFile.get_docx_variables"
DAStaticFile.show: "objects.html#DAStaticFile.show"
DAStaticFile.slurp: "objects.html#DAStaticFile.slurp"
DAStaticFile.url_for: "objects.html#DAStaticFile.url_for"
DAStaticFile.path: "objects.html#DAStaticFile.path"
DAStaticFile.set_alt_text: "objects.html#DAStaticFile.set_alt_text"
DAStaticFile.get_alt_text: "objects.html#DAStaticFile.get_alt_text"
DATemplate: "objects.html#DATemplate"
DATemplate.show: "objects.html#DATemplate.show"
DAEmpty: "objects.html#DAEmpty"
DALink: "objects.html#DALink"
DAList: "objects.html#DAList"
DAList.set_object_type: "objects.html#DAList.set_object_type"
DAList.sort: "objects.html#DAList.sort"
DAList.sort_elements: "objects.html#DAList.sort_elements"
DAList.add_action: "objects.html#DAList.add_action"
DAList.item_actions: "objects.html#DAList.item_actions"
DAList.append: "objects.html#DAList.append"
DAList.appendObject: "objects.html#DAList.appendObject"
DAList.complete_elements: "objects.html#DAList.complete_elements"
DAList.extend: "objects.html#DAList.extend"
DAList.gathered_and_complete: "objects.html#DAList.gathered_and_complete"
DAList.item_name: "objects.html#DAList.item_name"
DAList.delitem: "objects.html#DAList.delitem"
DAList.filter: "objects.html#DAList.filter"
DAList.initializeObject: "objects.html#DAList.initializeObject"
DAList.first: "objects.html#DAList.first"
DAList.last: "objects.html#DAList.last"
DAList.index: "objects.html#DAList.index"
DAList.item: "objects.html#DAList.item"
DAList.does_verb: "objects.html#DAList.does_verb"
DAList.did_verb: "objects.html#DAList.did_verb"
DAList.as_singular_noun: "objects.html#DAList.as_singular_noun"
DAList.as_noun: "objects.html#DAList.as_noun"
DAList.number: "objects.html#DAList.number"
DAList.number_as_word: "objects.html#DAList.number_as_word"
DAList.pop: "objects.html#DAList.pop"
DAList.count: "objects.html#DAList.count"
DAList.insert: "objects.html#DAList.insert"
DAList.reverse: "objects.html#DAList.reverse"
DAList.current_index: "objects.html#DAList.current_index"
DAList.remove: "objects.html#DAList.remove"
DAList.clear: "objects.html#DAList.clear"
DAList.possessive: "objects.html#DAList.possessive"
DAList.pronoun_objective: "objects.html#DAList.pronoun_objective"
DAList.pronoun_subjective: "objects.html#DAList.pronoun_subjective"
DAList.pronoun_possessive: "objects.html#DAList.pronoun_possessive"
DAList.pronoun: "objects.html#DAList.pronoun"
DAList.gather: "objects.html#DAList.gather"
DAList.comma_and_list: "objects.html#DAList.comma_and_list"
DAList.union: "objects.html#DAList.union"
DAList.intersection: "objects.html#DAList.intersection"
DAList.difference: "objects.html#DAList.difference"
DAList.isdisjoint: "objects.html#DAList.isdisjoint"
DAList.issubset: "objects.html#DAList.issubset"
DAList.issuperset: "objects.html#DAList.issuperset"
DAList.reset_gathered: "objects.html#DAList.reset_gathered"
DAList.has_been_gathered: "objects.html#DAList.has_been_gathered"
DAList.hook_on_gather: "objects.html#DAList.hook_on_gather"
DAList.hook_after_gather: "objects.html#DAList.hook_after_gather"
DAEmail: "objects.html#DAEmail"
DAEmailRecipient: "objects.html#DAEmailRecipient"
DAEmailRecipient.email_address: "objects.html#DAEmailRecipient.email_address"
DAEmailRecipient.exists: "objects.html#DAEmailRecipient.exists"
DAEmailRecipientList: "objects.html#DAEmailRecipientList"
DAOAuth: "objects.html#DAOAuth"
DAStore: "objects.html#DAStore"
DAStore.get: "objects.html#DAStore.get"
DAStore.is_encrypted: "objects.html#DAStore.is_encrypted"
DAStore.base: "objects.html#DAStore.base"
DAStore.encrypted: "objects.html#DAStore.encrypted"
DAStore.defined: "objects.html#DAStore.defined"
DAStore.set: "objects.html#DAStore.set"
DAStore.delete: "objects.html#DAStore.delete"
DARedis: "objects.html#DARedis"
DARedis.key: "objects.html#DARedis.key"
DARedis.set_data: "objects.html#DARedis.set_data"
DARedis.get_data: "objects.html#DARedis.get_data"
DACloudStorage: "objects.html#DACloudStorage"
DAGoogleAPI: "objects.html#DAGoogleAPI"
DAModel: "ml.html#DAModel"
DAModel.predict: "ml.html#DAModel.predict"
DADateTime: "objects.html#DADateTime"
DADateTime.plus: "objects.html#DADateTime.plus"
DADateTime.minus: "objects.html#DADateTime.minus"
DADateTime.format: "objects.html#DADateTime.format"
DADateTime.format_date: "objects.html#DADateTime.format_date"
DADateTime.format_datetime: "objects.html#DADateTime.format_datetime"
DADateTime.format_time: "objects.html#DADateTime.format_time"
DADateTime.replace_time: "objects.html#DADateTime.replace_time"
Thing: "objects.html#Thing"
OfficeList: "objects.html#OfficeList"
PartyList: "objects.html#PartyList"
Organization: "objects.html#Organization"
Organization.will_handle: "objects.html#Organization.will_handle"
interview_url: "functions.html#interview_url"
interview_url_action: "functions.html#interview_url_action"
interview_url_as_qr: "functions.html#interview_url_as_qr"
interview_url_action_as_qr: "functions.html#interview_url_action_as_qr"
map_of: "functions.html#map_of"
send_sms: "functions.html#send_sms"
send_email: "functions.html#send_email"
send_fax: "functions.html#send_fax"
Person: "objects.html#Person"
Person.possessive: "objects.html#Person.possessive"
Person.identified: "objects.html#Person.identified"
Person.pronoun_objective: "objects.html#Person.pronoun_objective"
Person.object_possessive: "objects.html#Person.object_possessive"
Person.is_are_you: "objects.html#Person.is_are_you"
Person.is_user: "objects.html#Person.is_user"
Person.address_block: "objects.html#Person.address_block"
Person.email_address: "objects.html#Person.email_address"
Person.do_question: "objects.html#Person.do_question"
Person.did_question: "objects.html#Person.did_question"
Person.were_question: "objects.html#Person.were_question"
Person.have_question: "objects.html#Person.have_question"
Person.does_verb: "objects.html#Person.does_verb"
Person.did_verb: "objects.html#Person.did_verb"
Person.subject: "objects.html#Person.subject"
Person.sms_number: "objects.html#Person.sms_number"
Individual: "objects.html#Individual"
Individual.possessive: "objects.html#Individual.possessive"
Name: "objects.html#Name"
Name.full: "objects.html#Name.full"
Name.firstlast: "objects.html#Name.firstlast"
Name.lastfirst: "objects.html#Name.lastfirst"
Name.defined: "objects.html#Name.defined"
IndividualName: "objects.html#IndividualName"
IndividualName.full: "objects.html#IndividualName.full"
IndividualName.firstlast: "objects.html#IndividualName.firstlast"
IndividualName.lastfirst: "objects.html#IndividualName.lastfirst"
IndividualName.defined: "objects.html#IndividualName.defined"
Address: "objects.html#Address"
Address.block: "objects.html#Address.block"
Address.geocode: "objects.html#Address.geocode"
Address.normalize: "objects.html#Address.normalize"
Address.reset_geocoding: "objects.html#Address.reset_geocoding"
Address.on_one_line: "objects.html#Address.on_one_line"
Address.line_one: "objects.html#Address.line_one"
Address.line_two: "objects.html#Address.line_two"
City: "objects.html#City"
Event: "objects.html#Event"
LatitudeLongitude: "objects.html#LatitudeLongitude"
LatitudeLongitude.status: "objects.html#LatitudeLongitude.status"
Court: "legal.html#Court"
Court.in_the_court: "legal.html#Court.in_the_court"
Case: "legal.html#Case"
Case.parties: "legal.html#Case.parties"
Case.set_action_type: "legal.html#Case.set_action_type"
Case.case_id_in_caption: "legal.html#Case.case_id_in_caption"
Case.determine_court: "legal.html#Case.determine_court"
Case.all_known_people: "legal.html#Case.all_known_people"
Case.role_of: "legal.html#Case.role_of"
Jurisdiction: "legal.html#Jurisdiction"
Document: "legal.html#Document"
LegalFiling: "legal.html#LegalFiling"
LegalFiling.caption: "legal.html#LegalFiling.caption"
Value: "objects.html#Value"
Value.amount: "objects.html#Value.amount"
PeriodicValue: "objects.html#PeriodicValue"
PeriodicValue.amount: "objects.html#PeriodicValue.amount"
ChildList: "objects.html#ChildList"
FinancialList: "objects.html#FinancialList"
FinancialList.new: "objects.html#FinancialList.new"
FinancialList.total: "objects.html#FinancialList.total"
FinancialList.existing_items: "objects.html#FinancialList.existing_items"
Asset: "objects.html#Asset"
PeriodicFinancialList: "objects.html#PeriodicFinancialList"
PeriodicFinancialList.new: "objects.html#PeriodicFinancialList.new"
PeriodicFinancialList.total: "objects.html#PeriodicFinancialList.total"
Income: "objects.html#Income"
Expense: "objects.html#Expense"
RoleChangeTracker: "objects.html#RoleChangeTracker"
RoleChangeTracker.send_email: "objects.html#RoleChangeTracker.send_email"
Individual.identified: "objects.html#Individual.identified"
Individual.age_in_years: "objects.html#Individual.age_in_years"
Individual.first_name_hint: "objects.html#Individual.first_name_hint"
Individual.last_name_hint: "objects.html#Individual.last_name_hint"
Individual.salutation: "objects.html#Individual.salutation"
Individual.pronoun_possessive: "objects.html#Individual.pronoun_possessive"
Individual.pronoun: "objects.html#Individual.pronoun"
Individual.pronoun_objective: "objects.html#Individual.pronoun_objective"
Individual.pronoun_subjective: "objects.html#Individual.pronoun_subjective"
Individual.yourself_or_name: "objects.html#Individual.yourself_or_name"
defined: "functions.html#defined"
define: "functions.html#define"
undefine: "functions.html#undefine"
invalidate: "functions.html#invalidate"
value: "functions.html#value"
from_b64_json: "functions.html#from_b64_json"
get_config: "config.html#get_config"
location_known: "functions.html#location_known"
location_returned: "functions.html#location_returned"
objects_from_file: "functions.html#objects_from_file"
selections: "functions.html#selections"
today: "functions.html#today"
month_of: "functions.html#month_of"
day_of: "functions.html#day_of"
dow_of: "functions.html#dow_of"
year_of: "functions.html#year_of"
format_date: "functions.html#format_date"
format_time: "functions.html#format_time"
timezone_list: "functions.html#timezone_list"
get_default_timezone: "functions.html#get_default_timezone"
as_datetime: "functions.html#as_datetime"
current_datetime: "functions.html#current_datetime"
date_difference: "functions.html#date_difference"
date_interval: "functions.html#date_interval"
quantity_noun: "functions.html#quantity_noun"
user_lat_lon: "functions.html#user_lat_lon"
us: "special.html#us"
last_access_time: "functions.html#last_access_time"
last_access_delta: "functions.html#last_access_delta"
last_access_days: "functions.html#last_access_days"
last_access_hours: "functions.html#last_access_hours"
last_access_minutes: "functions.html#last_access_minutes"
returning_user: "functions.html#returning_user"
message: "functions.html#message"
response: "functions.html#response"
json_response: "functions.html#json_response"
command: "functions.html#command"
single_paragraph: "functions.html#single_paragraph"
quote_paragraphs: "functions.html#quote_paragraphs"
x: "modifiers.html#generic object"
i: "groups.html#i"
user_logged_in: "functions.html#user_logged_in"
interface: "functions.html#interface"
user_privileges: "functions.html#user_privileges"
user_has_privilege: "functions.html#user_has_privilege"
user_info: "functions.html#user_info"
action_arguments: "functions.html#action_arguments"
action_argument: "functions.html#action_argument"
task_performed: "functions.html#task_performed"
task_not_yet_performed: "functions.html#task_not_yet_performed"
mark_task_as_performed: "functions.html#mark_task_as_performed"
times_task_performed: "functions.html#times_task_performed"
set_task_counter: "functions.html#set_task_counter"
background_action: "background.html#background_action"
background_response: "background.html#background_response"
background_response_action: "background.html#background_response_action"
background_error_action: "background.html#background_error_action"
SVMMachineLearner: "ml.html#SVMMachineLearner"
RandomForestMachineLearner: "ml.html#RandomForestMachineLearner"
SimpleTextMachineLearner: "ml.html#SimpleTextMachineLearner"
SimpleTextMachineLearner.new_entry: "ml.html#SimpleTextMachineLearner.new_entry"
SimpleTextMachineLearner.reset: "ml.html#SimpleTextMachineLearner.reset"
SimpleTextMachineLearner.predict: "ml.html#SimpleTextMachineLearner.predict"
SimpleTextMachineLearner.delete_training_set: "ml.html#SimpleTextMachineLearner.delete_training_set"
SimpleTextMachineLearner.delete_by_key: "ml.html#SimpleTextMachineLearner.delete_by_key"
SimpleTextMachineLearner.delete_by_id: "ml.html#SimpleTextMachineLearner.delete_by_id"
SimpleTextMachineLearner.set_dependent_by_id: "ml.html#SimpleTextMachineLearner.set_dependent_by_id"
SimpleTextMachineLearner.classified_entries: "ml.html#SimpleTextMachineLearner.classified_entries"
SimpleTextMachineLearner.unclassified_entries: "ml.html#SimpleTextMachineLearner.unclassified_entries"
SimpleTextMachineLearner.one_unclassified_entry: "ml.html#SimpleTextMachineLearner.one_unclassified_entry"
SimpleTextMachineLearner.retrieve_by_id: "ml.html#SimpleTextMachineLearner.retrieve_by_id"
SimpleTextMachineLearner.save_for_classification: "ml.html#SimpleTextMachineLearner.save_for_classification"
SimpleTextMachineLearner.add_to_training_set: "ml.html#SimpleTextMachineLearner.add_to_training_set"
SimpleTextMachineLearner.is_empty: "ml.html#SimpleTextMachineLearner.is_empty"
SimpleTextMachineLearner.dependent_in_use: "ml.html#SimpleTextMachineLearner.dependent_in_use"
SimpleTextMachineLearner.export_training_set: "ml.html#SimpleTextMachineLearner.export_training_set"
SimpleTextMachineLearner.confusion_matrix: "ml.html#SimpleTextMachineLearner.confusion_matrix"
MachineLearningEntry: "ml.html#MachineLearningEntry"
MachineLearningEntry.classify: "ml.html#MachineLearningEntry.classify"
MachineLearningEntry.predict: "ml.html#MachineLearningEntry.predict"
MachineLearningEntry.save: "ml.html#MachineLearningEntry.save"
set_live_help_status: "livehelp.html#set_live_help_status"
set_status: "functions.html#set_status"
get_status: "functions.html#get_status"
chat_partners_available: "livehelp.html#chat_partners_available"
phone_number_in_e164: "functions.html#phone_number_in_e164"
phone_number_formatted: "functions.html#phone_number_formatted"
phone_number_is_valid: "functions.html#phone_number_is_valid"
countries_list: "functions.html#countries_list"
country_name: "functions.html#country_name"
ocr_file: "functions.html#ocr_file"
ocr_file_in_background: "functions.html#ocr_file_in_background"
read_qr: "functions.html#read_qr"
get_sms_session: "functions.html#get_sms_session"
state_name: "functions.html#state_name"
states_list: "functions.html#states_list"
subdivision_type: "functions.html#subdivision_type"
initiate_sms_session: "functions.html#initiate_sms_session"
terminate_sms_session: "functions.html#terminate_sms_session"
all_variables: "functions.html#all_variables"
variables_as_json: "functions.html#variables_as_json"
role_event: "roles.html"
loop: "markup.html#loop"
server_capabilities: "functions.html#server_capabilities"
language_from_browser: "functions.html#language_from_browser"
device: "functions.html#device"
write_record: "functions.html#write_record"
read_records: "functions.html#read_records"
delete_record: "functions.html#delete_record"
static_image: "functions.html#static_image"
interview_email: "functions.html#interview_email"
get_emails: "functions.html#get_emails"
plain: "functions.html#plain"
bold: "functions.html#bold"
italic: "functions.html#italic"
path_and_mimetype: "functions.html#path_and_mimetype"
indent: "functions.html#indent"
raw: "functions.html#raw"
fix_punctuation: "functions.html#fix_punctuation"
set_progress: "functions.html#set_progress"
get_progress: "functions.html#get_progress"
nav: "functions.html#DANav.get_section"
DANav: "functions.html#DANav.get_section"
DANav.set_section: "functions.html#DANav.set_section"
DANav.get_section: "functions.html#DANav.get_section"
DANav.set_sections: "functions.html#DANav.set_sections"
DANav.get_sections: "functions.html#DANav.get_sections"
DANav.show_sections: "functions.html#DANav.show_sections"
DANav.section_ids: "functions.html#DANav.section_ids"
DANav.hide: "functions.html#DANav.hide"
DANav.unhide: "functions.html#DANav.unhide"
DANav.disable: "functions.html#DANav.disable"
DANav.enable: "functions.html#DANav.enable"
DANav.visible: "functions.html#DANav.visible"
DANav.enabled: "functions.html#DANav.enabled"
run_python_module: "functions.html#run_python_module"
dispatch: "functions.html#dispatch"
yesno: "functions.html#yesno"
noyes: "functions.html#noyes"
split: "functions.html#split"
showif: "functions.html#showif"
showifdef: "functions.html#showifdef"
phone_number_part: "functions.html#phone_number_part"
set_parts: "functions.html#set_parts"
set_title: "functions.html#set_parts"
session_tags: "functions.html#session_tags"
log: "functions.html#log"
encode_name: "functions.html#encode_name"
decode_name: "functions.html#decode_name"
interview_list: "functions.html#interview_list"
interview_menu: "functions.html#interview_menu"
include_docx_template: "functions.html#include_docx_template"
pdf_concatenate: "functions.html#pdf_concatenate"
get_chat_log: "livehelp.html#get_chat_log"
go_back_in_session: "functions.html#go_back_in_session"
create_session: "functions.html#create_session"
set_session_variables: "functions.html#set_session_variables"
get_session_variables: "functions.html#get_session_variables"
get_user_secret: "functions.html#get_user_secret"
create_user: "functions.html#create_user"
set_user_info: "functions.html#set_user_info"
get_user_info: "functions.html#get_user_info"
get_user_list: "functions.html#get_user_list"
manage_privileges: "functions.html#manage_privileges"
start_time: "functions.html#start_time"
zip_file: "functions.html#zip_file"
validation_error: "functions.html#validation_error"
DAValidationError: "functions.html#DAValidationError"
redact: "functions.html#redact"
forget_result_of: "functions.html#forget_result_of"
re_run_logic: "functions.html#re_run_logic"
reconsider: "functions.html#reconsider"
action_button_html: "functions.html#action_button_html"
url_ask: "functions.html#url_ask"
mmdc: "functions.html#mmdc"
overlay_pdf: "functions.html#overlay_pdf"
get_question_data: "functions.html#get_question_data"
set_save_status: "functions.html#set_save_status"
explain: "functions.html#explain"
clear_explanations: "functions.html#clear_explanations"
logic_explanation: "functions.html#logic_explanation"
SQLObject: "objects.html#SQLObject"
DAWeb: "objects.html#DAWeb"
DAWebError: "objects.html#DAWebError"
iso_country: "functions.html#iso_country"
assemble_docx: "functions.html#assemble_docx"
docx_concatenate: "functions.html#docx_concatenate"
session_local: "special.html#session_local"
device_local: "special.html#device_local"
user_local: "special.html#user_local"
stash_data: "functions.html#stash_data"
retrieve_stashed_data: "functions.html#retrieve_stashed_data"
update_terms: "functions.html#update_terms"
DABreadCrumbs: "objects.html#DABreadCrumbs"
set_variables: "functions.html#set_variables"
language_name: "functions.html#language_name"
DA: "functions.html#session query string"
DAGlobal: "objects.html#DAGlobal"
chain: "special.html#chain"
json: "special.html#json"
re: "special.html#re"
run_action_in_session: "functions.html#run_action_in_session"
